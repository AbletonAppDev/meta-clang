TOOLCHAIN ?= ""

CC_toolchain-clang  = "${TARGET_PREFIX}clang ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
CXX_toolchain-clang = "${TARGET_PREFIX}clang++ ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
CPP_toolchain-clang = "${TARGET_PREFIX}clang ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS} -E"
CCLD_toolchain-clang = "${TARGET_PREFIX}clang ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
THUMB_TUNE_CCARGS_remove_toolchain-clang = "-mthumb-interwork"
TUNE_CCARGS_append_toolchain-clang = " -D__extern_always_inline=inline"

TOOLCHAIN_OPTIONS_append_toolchain-clang_class-nativesdk_x86-64 = " -Wl,-dynamic-linker,${base_libdir}/ld-linux-x86-64.so.2"
TOOLCHAIN_OPTIONS_append_toolchain-clang_class-nativesdk_x86 = " -Wl,-dynamic-linker,${base_libdir}/ld-linux.so.2"

TOOLCHAIN_pn-lzo = "clang"
DEPENDS_append_pn-lzo = " clang-cross-${TARGET_ARCH} "

#TOOLCHAIN_pn-musl = "clang"
#DEPENDS_append_pn-musl = " clang-cross-${TARGET_ARCH} "

TOOLCHAIN_pn-toybox = "clang"
DEPENDS_append_pn-toybox = " clang-cross-${TARGET_ARCH} "

TOOLCHAIN_pn-compiler-rt = "clang"
DEPENDS_append_pn-compiler-rt = " clang-cross-${TARGET_ARCH} "

TOOLCHAIN_pn-clang = "clang"
DEPENDS_append_pn-clang = " clang-cross-${TARGET_ARCH} "
